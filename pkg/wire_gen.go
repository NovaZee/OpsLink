// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package pkg

import (
	"github.com/denovo/permission/configration"
	"github.com/denovo/permission/pkg/casbin"
	"github.com/denovo/permission/pkg/componment"
	"github.com/denovo/permission/pkg/router"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitializeServer(cfg *config.Config) (*OpsLinkServer, error) {
	db, err := getDbEngine(cfg)
	if err != nil {
		return nil, err
	}
	casbinAdapter := getCasbinAdapter(db, cfg)
	router, err := initRouter(casbinAdapter)
	if err != nil {
		return nil, err
	}
	opsLinkServer, err := NewOpsLinkServer(cfg, db, casbinAdapter, router)
	if err != nil {
		return nil, err
	}
	return opsLinkServer, nil
}

// wire.go:

func getDbEngine(conf *config.Config) (*gorm.DB, error) {
	return componment.InitDBConnection(conf)
}

func getCasbinAdapter(engine *gorm.DB, conf *config.Config) *casbin.CasbinAdapter {
	return casbin.NewCasbinAdapter(engine, conf)
}

func initRouter(ca *casbin.CasbinAdapter) (*router.Router, error) {
	return router.InitRouter(ca)
}
